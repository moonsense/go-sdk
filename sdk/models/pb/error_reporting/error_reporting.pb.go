// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: error_reporting.proto

package error_reporting

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moonsense.io/sdk/models/pb/v2/common"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorMessage_Level int32

const (
	ErrorMessage_INVALID ErrorMessage_Level = 0
	ErrorMessage_DEBUG   ErrorMessage_Level = 1
	ErrorMessage_INFO    ErrorMessage_Level = 2
	ErrorMessage_WARNING ErrorMessage_Level = 3
	ErrorMessage_ERROR   ErrorMessage_Level = 4
	ErrorMessage_FATAL   ErrorMessage_Level = 5
)

// Enum value maps for ErrorMessage_Level.
var (
	ErrorMessage_Level_name = map[int32]string{
		0: "INVALID",
		1: "DEBUG",
		2: "INFO",
		3: "WARNING",
		4: "ERROR",
		5: "FATAL",
	}
	ErrorMessage_Level_value = map[string]int32{
		"INVALID": 0,
		"DEBUG":   1,
		"INFO":    2,
		"WARNING": 3,
		"ERROR":   4,
		"FATAL":   5,
	}
)

func (x ErrorMessage_Level) Enum() *ErrorMessage_Level {
	p := new(ErrorMessage_Level)
	*p = x
	return p
}

func (x ErrorMessage_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorMessage_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_error_reporting_proto_enumTypes[0].Descriptor()
}

func (ErrorMessage_Level) Type() protoreflect.EnumType {
	return &file_error_reporting_proto_enumTypes[0]
}

func (x ErrorMessage_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorMessage_Level.Descriptor instead.
func (ErrorMessage_Level) EnumDescriptor() ([]byte, []int) {
	return file_error_reporting_proto_rawDescGZIP(), []int{2, 0}
}

// Represents a frame in a Stacktrace. We can also probably use this
// same message for a thread trace in the future.
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For eg. ""onCreate"
	Function string `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	// For eg. "io.moonsense.sdk.sample.MainActivity"
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	// For eg. "MainActivity.kt"
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	// For eg. 64,
	LineNo int32 `protobuf:"varint,4,opt,name=line_no,json=lineNo,proto3" json:"line_no,omitempty"`
	// For eg. 12
	ColNo int32 `protobuf:"varint,5,opt,name=col_no,json=colNo,proto3" json:"col_no,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_error_reporting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_error_reporting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_error_reporting_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Frame) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Frame) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Frame) GetLineNo() int32 {
	if x != nil {
		return x.LineNo
	}
	return 0
}

func (x *Frame) GetColNo() int32 {
	if x != nil {
		return x.ColNo
	}
	return 0
}

// Represents an exception that occurred on the SDK.
type Exception struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For eg. "UninitializedPropertyAccessException". Maps directly to Sentry.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// For eg. "lateinit property username has not been initialized". Maps directly to Sentry.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Note that we have skipped the Sentry StackTrace object since it seems excessive for our
	// use case.
	Stacktrace []*Frame `protobuf:"bytes,3,rep,name=stacktrace,proto3" json:"stacktrace,omitempty"`
}

func (x *Exception) Reset() {
	*x = Exception{}
	if protoimpl.UnsafeEnabled {
		mi := &file_error_reporting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exception) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exception) ProtoMessage() {}

func (x *Exception) ProtoReflect() protoreflect.Message {
	mi := &file_error_reporting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exception.ProtoReflect.Descriptor instead.
func (*Exception) Descriptor() ([]byte, []int) {
	return file_error_reporting_proto_rawDescGZIP(), []int{1}
}

func (x *Exception) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Exception) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Exception) GetStacktrace() []*Frame {
	if x != nil {
		return x.Stacktrace
	}
	return nil
}

// Represents an issue that has been captured by the SDK.
//
// The Moonsense backend converts the information contained
// in this message into one that is understandable by Sentry.
//
// Note that event_id for the Sentry transaction is generated
// server side.
type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The title that will show up on Sentry.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Timestamp represented in millis since epoch
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// We send one of "android", "ios" or "web". The backend converts it into
	// one that Sentry expects like java, objc and so on.
	Platform common.DevicePlatform `protobuf:"varint,3,opt,name=platform,proto3,enum=v2.common.DevicePlatform" json:"platform,omitempty"`
	// E.g Apple or Samsung - useful debug info. Makes it way to Sentry tags.
	Manufacturer string `protobuf:"bytes,4,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	// iPhone13,4 OR Pixel 3a - useful debug info.
	Model string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	// 14.4 (iOS) / 11 (Android) - useful debug info. Makes it way to Sentry tags.
	OsVersion string `protobuf:"bytes,6,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	// One of fatal, error, warning, info, debug. Helps send info only messages as well.
	Level ErrorMessage_Level `protobuf:"varint,7,opt,name=level,proto3,enum=error_reporting.ErrorMessage_Level" json:"level,omitempty"`
	// Determines the version of the SDK that caused the issue.
	ReleaseVersion string `protobuf:"bytes,8,opt,name=release_version,json=releaseVersion,proto3" json:"release_version,omitempty"`
	// Needed to de-obfuscate the Android stack traces.
	// https://develop.sentry.dev/sdk/event-payloads/debugmeta#proguard-images
	ProguardUuid string `protobuf:"bytes,9,opt,name=proguard_uuid,json=proguardUuid,proto3" json:"proguard_uuid,omitempty"`
	// Any exceptions related to this message - can be ignored for level = info
	// or level = debug.
	Exception *Exception `protobuf:"bytes,10,opt,name=exception,proto3" json:"exception,omitempty"`
	// A map of any extra tags the should be stored for the
	// error report. These will be split out as individual
	// tags when pushed to sentry
	AdditionalTags map[string]string `protobuf:"bytes,11,rep,name=additional_tags,json=additionalTags,proto3" json:"additional_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_error_reporting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_error_reporting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_error_reporting_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ErrorMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ErrorMessage) GetPlatform() common.DevicePlatform {
	if x != nil {
		return x.Platform
	}
	return common.DevicePlatform(0)
}

func (x *ErrorMessage) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *ErrorMessage) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ErrorMessage) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *ErrorMessage) GetLevel() ErrorMessage_Level {
	if x != nil {
		return x.Level
	}
	return ErrorMessage_INVALID
}

func (x *ErrorMessage) GetReleaseVersion() string {
	if x != nil {
		return x.ReleaseVersion
	}
	return ""
}

func (x *ErrorMessage) GetProguardUuid() string {
	if x != nil {
		return x.ProguardUuid
	}
	return ""
}

func (x *ErrorMessage) GetException() *Exception {
	if x != nil {
		return x.Exception
	}
	return nil
}

func (x *ErrorMessage) GetAdditionalTags() map[string]string {
	if x != nil {
		return x.AdditionalTags
	}
	return nil
}

var File_error_reporting_proto protoreflect.FileDescriptor

var file_error_reporting_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c,
	0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x4e, 0x6f, 0x22, 0x7f, 0x0a, 0x09,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0xac, 0x05,
	0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5a, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x04, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x10, 0x05, 0x42, 0x60, 0x0a, 0x13,
	0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x42, 0x14, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5a, 0x33, 0x6d, 0x6f, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x65, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_error_reporting_proto_rawDescOnce sync.Once
	file_error_reporting_proto_rawDescData = file_error_reporting_proto_rawDesc
)

func file_error_reporting_proto_rawDescGZIP() []byte {
	file_error_reporting_proto_rawDescOnce.Do(func() {
		file_error_reporting_proto_rawDescData = protoimpl.X.CompressGZIP(file_error_reporting_proto_rawDescData)
	})
	return file_error_reporting_proto_rawDescData
}

var file_error_reporting_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_error_reporting_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_error_reporting_proto_goTypes = []interface{}{
	(ErrorMessage_Level)(0),    // 0: error_reporting.ErrorMessage.Level
	(*Frame)(nil),              // 1: error_reporting.Frame
	(*Exception)(nil),          // 2: error_reporting.Exception
	(*ErrorMessage)(nil),       // 3: error_reporting.ErrorMessage
	nil,                        // 4: error_reporting.ErrorMessage.AdditionalTagsEntry
	(common.DevicePlatform)(0), // 5: v2.common.DevicePlatform
}
var file_error_reporting_proto_depIdxs = []int32{
	1, // 0: error_reporting.Exception.stacktrace:type_name -> error_reporting.Frame
	5, // 1: error_reporting.ErrorMessage.platform:type_name -> v2.common.DevicePlatform
	0, // 2: error_reporting.ErrorMessage.level:type_name -> error_reporting.ErrorMessage.Level
	2, // 3: error_reporting.ErrorMessage.exception:type_name -> error_reporting.Exception
	4, // 4: error_reporting.ErrorMessage.additional_tags:type_name -> error_reporting.ErrorMessage.AdditionalTagsEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_error_reporting_proto_init() }
func file_error_reporting_proto_init() {
	if File_error_reporting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_error_reporting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_error_reporting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exception); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_error_reporting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_error_reporting_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_error_reporting_proto_goTypes,
		DependencyIndexes: file_error_reporting_proto_depIdxs,
		EnumInfos:         file_error_reporting_proto_enumTypes,
		MessageInfos:      file_error_reporting_proto_msgTypes,
	}.Build()
	File_error_reporting_proto = out.File
	file_error_reporting_proto_rawDesc = nil
	file_error_reporting_proto_goTypes = nil
	file_error_reporting_proto_depIdxs = nil
}
